// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: bstone.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BstoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *BstoneRequest) Reset() {
	*x = BstoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bstone_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BstoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BstoneRequest) ProtoMessage() {}

func (x *BstoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bstone_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BstoneRequest.ProtoReflect.Descriptor instead.
func (*BstoneRequest) Descriptor() ([]byte, []int) {
	return file_bstone_proto_rawDescGZIP(), []int{0}
}

func (x *BstoneRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text        string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Label       string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	LabelNumber int64  `protobuf:"varint,3,opt,name=labelNumber,proto3" json:"labelNumber,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bstone_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_bstone_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_bstone_proto_rawDescGZIP(), []int{1}
}

func (x *Entity) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Entity) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Entity) GetLabelNumber() int64 {
	if x != nil {
		return x.LabelNumber
	}
	return 0
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sentence   string  `protobuf:"bytes,1,opt,name=sentence,proto3" json:"sentence,omitempty"`
	Category   string  `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Confidence float32 `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bstone_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_bstone_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_bstone_proto_rawDescGZIP(), []int{2}
}

func (x *Category) GetSentence() string {
	if x != nil {
		return x.Sentence
	}
	return ""
}

func (x *Category) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Category) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type Abbreviation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Abrv     string `protobuf:"bytes,1,opt,name=abrv,proto3" json:"abrv,omitempty"`
	Start    int64  `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End      int64  `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	LongForm string `protobuf:"bytes,4,opt,name=longForm,proto3" json:"longForm,omitempty"`
}

func (x *Abbreviation) Reset() {
	*x = Abbreviation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bstone_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Abbreviation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Abbreviation) ProtoMessage() {}

func (x *Abbreviation) ProtoReflect() protoreflect.Message {
	mi := &file_bstone_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Abbreviation.ProtoReflect.Descriptor instead.
func (*Abbreviation) Descriptor() ([]byte, []int) {
	return file_bstone_proto_rawDescGZIP(), []int{3}
}

func (x *Abbreviation) GetAbrv() string {
	if x != nil {
		return x.Abrv
	}
	return ""
}

func (x *Abbreviation) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Abbreviation) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *Abbreviation) GetLongForm() string {
	if x != nil {
		return x.LongForm
	}
	return ""
}

type CompoundReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference string `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
}

func (x *CompoundReference) Reset() {
	*x = CompoundReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bstone_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompoundReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompoundReference) ProtoMessage() {}

func (x *CompoundReference) ProtoReflect() protoreflect.Message {
	mi := &file_bstone_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompoundReference.ProtoReflect.Descriptor instead.
func (*CompoundReference) Descriptor() ([]byte, []int) {
	return file_bstone_proto_rawDescGZIP(), []int{4}
}

func (x *CompoundReference) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type BstoneEntitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *BstoneEntitiesResponse) Reset() {
	*x = BstoneEntitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bstone_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BstoneEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BstoneEntitiesResponse) ProtoMessage() {}

func (x *BstoneEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bstone_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BstoneEntitiesResponse.ProtoReflect.Descriptor instead.
func (*BstoneEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_bstone_proto_rawDescGZIP(), []int{5}
}

func (x *BstoneEntitiesResponse) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type BstoneCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*Category `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *BstoneCategoriesResponse) Reset() {
	*x = BstoneCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bstone_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BstoneCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BstoneCategoriesResponse) ProtoMessage() {}

func (x *BstoneCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bstone_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BstoneCategoriesResponse.ProtoReflect.Descriptor instead.
func (*BstoneCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_bstone_proto_rawDescGZIP(), []int{6}
}

func (x *BstoneCategoriesResponse) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

type BstoneCompoundReferencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	References []*CompoundReference `protobuf:"bytes,1,rep,name=references,proto3" json:"references,omitempty"`
}

func (x *BstoneCompoundReferencesResponse) Reset() {
	*x = BstoneCompoundReferencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bstone_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BstoneCompoundReferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BstoneCompoundReferencesResponse) ProtoMessage() {}

func (x *BstoneCompoundReferencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bstone_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BstoneCompoundReferencesResponse.ProtoReflect.Descriptor instead.
func (*BstoneCompoundReferencesResponse) Descriptor() ([]byte, []int) {
	return file_bstone_proto_rawDescGZIP(), []int{7}
}

func (x *BstoneCompoundReferencesResponse) GetReferences() []*CompoundReference {
	if x != nil {
		return x.References
	}
	return nil
}

type BstoneAbbreviationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Abbreviations []*Abbreviation `protobuf:"bytes,1,rep,name=abbreviations,proto3" json:"abbreviations,omitempty"`
}

func (x *BstoneAbbreviationsResponse) Reset() {
	*x = BstoneAbbreviationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bstone_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BstoneAbbreviationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BstoneAbbreviationsResponse) ProtoMessage() {}

func (x *BstoneAbbreviationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bstone_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BstoneAbbreviationsResponse.ProtoReflect.Descriptor instead.
func (*BstoneAbbreviationsResponse) Descriptor() ([]byte, []int) {
	return file_bstone_proto_rawDescGZIP(), []int{8}
}

func (x *BstoneAbbreviationsResponse) GetAbbreviations() []*Abbreviation {
	if x != nil {
		return x.Abbreviations
	}
	return nil
}

var File_bstone_proto protoreflect.FileDescriptor

var file_bstone_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0x23, 0x0a, 0x0d, 0x42, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x54, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x62, 0x0a,
	0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e,
	0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e,
	0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x22, 0x66, 0x0a, 0x0c, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x62, 0x72, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x62, 0x72, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x6d, 0x22, 0x31, 0x0a, 0x11, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x40, 0x0a, 0x16,
	0x42, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x48,
	0x0a, 0x18, 0x42, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x20, 0x42, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x1b, 0x42, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x41, 0x62, 0x62,
	0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x61, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x62, 0x62,
	0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0x9e, 0x02, 0x0a, 0x06, 0x42,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0d, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x12, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x64, 0x65, 0x6c, 0x6d,
	0x61, 0x6e, 0x31, 0x37, 0x2f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bstone_proto_rawDescOnce sync.Once
	file_bstone_proto_rawDescData = file_bstone_proto_rawDesc
)

func file_bstone_proto_rawDescGZIP() []byte {
	file_bstone_proto_rawDescOnce.Do(func() {
		file_bstone_proto_rawDescData = protoimpl.X.CompressGZIP(file_bstone_proto_rawDescData)
	})
	return file_bstone_proto_rawDescData
}

var file_bstone_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_bstone_proto_goTypes = []interface{}{
	(*BstoneRequest)(nil),                    // 0: pb.BstoneRequest
	(*Entity)(nil),                           // 1: pb.Entity
	(*Category)(nil),                         // 2: pb.Category
	(*Abbreviation)(nil),                     // 3: pb.Abbreviation
	(*CompoundReference)(nil),                // 4: pb.CompoundReference
	(*BstoneEntitiesResponse)(nil),           // 5: pb.BstoneEntitiesResponse
	(*BstoneCategoriesResponse)(nil),         // 6: pb.BstoneCategoriesResponse
	(*BstoneCompoundReferencesResponse)(nil), // 7: pb.BstoneCompoundReferencesResponse
	(*BstoneAbbreviationsResponse)(nil),      // 8: pb.BstoneAbbreviationsResponse
}
var file_bstone_proto_depIdxs = []int32{
	1, // 0: pb.BstoneEntitiesResponse.entities:type_name -> pb.Entity
	2, // 1: pb.BstoneCategoriesResponse.categories:type_name -> pb.Category
	4, // 2: pb.BstoneCompoundReferencesResponse.references:type_name -> pb.CompoundReference
	3, // 3: pb.BstoneAbbreviationsResponse.abbreviations:type_name -> pb.Abbreviation
	0, // 4: pb.Bstone.Entities:input_type -> pb.BstoneRequest
	0, // 5: pb.Bstone.Categories:input_type -> pb.BstoneRequest
	0, // 6: pb.Bstone.Abbreviations:input_type -> pb.BstoneRequest
	0, // 7: pb.Bstone.CompoundReferences:input_type -> pb.BstoneRequest
	5, // 8: pb.Bstone.Entities:output_type -> pb.BstoneEntitiesResponse
	6, // 9: pb.Bstone.Categories:output_type -> pb.BstoneCategoriesResponse
	8, // 10: pb.Bstone.Abbreviations:output_type -> pb.BstoneAbbreviationsResponse
	7, // 11: pb.Bstone.CompoundReferences:output_type -> pb.BstoneCompoundReferencesResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_bstone_proto_init() }
func file_bstone_proto_init() {
	if File_bstone_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bstone_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BstoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bstone_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bstone_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bstone_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Abbreviation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bstone_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompoundReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bstone_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BstoneEntitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bstone_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BstoneCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bstone_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BstoneCompoundReferencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bstone_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BstoneAbbreviationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bstone_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bstone_proto_goTypes,
		DependencyIndexes: file_bstone_proto_depIdxs,
		MessageInfos:      file_bstone_proto_msgTypes,
	}.Build()
	File_bstone_proto = out.File
	file_bstone_proto_rawDesc = nil
	file_bstone_proto_goTypes = nil
	file_bstone_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BstoneClient is the client API for Bstone service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BstoneClient interface {
	Entities(ctx context.Context, in *BstoneRequest, opts ...grpc.CallOption) (*BstoneEntitiesResponse, error)
	Categories(ctx context.Context, in *BstoneRequest, opts ...grpc.CallOption) (*BstoneCategoriesResponse, error)
	Abbreviations(ctx context.Context, in *BstoneRequest, opts ...grpc.CallOption) (*BstoneAbbreviationsResponse, error)
	CompoundReferences(ctx context.Context, in *BstoneRequest, opts ...grpc.CallOption) (*BstoneCompoundReferencesResponse, error)
}

type bstoneClient struct {
	cc grpc.ClientConnInterface
}

func NewBstoneClient(cc grpc.ClientConnInterface) BstoneClient {
	return &bstoneClient{cc}
}

func (c *bstoneClient) Entities(ctx context.Context, in *BstoneRequest, opts ...grpc.CallOption) (*BstoneEntitiesResponse, error) {
	out := new(BstoneEntitiesResponse)
	err := c.cc.Invoke(ctx, "/pb.Bstone/Entities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bstoneClient) Categories(ctx context.Context, in *BstoneRequest, opts ...grpc.CallOption) (*BstoneCategoriesResponse, error) {
	out := new(BstoneCategoriesResponse)
	err := c.cc.Invoke(ctx, "/pb.Bstone/Categories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bstoneClient) Abbreviations(ctx context.Context, in *BstoneRequest, opts ...grpc.CallOption) (*BstoneAbbreviationsResponse, error) {
	out := new(BstoneAbbreviationsResponse)
	err := c.cc.Invoke(ctx, "/pb.Bstone/Abbreviations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bstoneClient) CompoundReferences(ctx context.Context, in *BstoneRequest, opts ...grpc.CallOption) (*BstoneCompoundReferencesResponse, error) {
	out := new(BstoneCompoundReferencesResponse)
	err := c.cc.Invoke(ctx, "/pb.Bstone/CompoundReferences", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BstoneServer is the server API for Bstone service.
type BstoneServer interface {
	Entities(context.Context, *BstoneRequest) (*BstoneEntitiesResponse, error)
	Categories(context.Context, *BstoneRequest) (*BstoneCategoriesResponse, error)
	Abbreviations(context.Context, *BstoneRequest) (*BstoneAbbreviationsResponse, error)
	CompoundReferences(context.Context, *BstoneRequest) (*BstoneCompoundReferencesResponse, error)
}

// UnimplementedBstoneServer can be embedded to have forward compatible implementations.
type UnimplementedBstoneServer struct {
}

func (*UnimplementedBstoneServer) Entities(context.Context, *BstoneRequest) (*BstoneEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Entities not implemented")
}
func (*UnimplementedBstoneServer) Categories(context.Context, *BstoneRequest) (*BstoneCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Categories not implemented")
}
func (*UnimplementedBstoneServer) Abbreviations(context.Context, *BstoneRequest) (*BstoneAbbreviationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Abbreviations not implemented")
}
func (*UnimplementedBstoneServer) CompoundReferences(context.Context, *BstoneRequest) (*BstoneCompoundReferencesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompoundReferences not implemented")
}

func RegisterBstoneServer(s *grpc.Server, srv BstoneServer) {
	s.RegisterService(&_Bstone_serviceDesc, srv)
}

func _Bstone_Entities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BstoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BstoneServer).Entities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Bstone/Entities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BstoneServer).Entities(ctx, req.(*BstoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bstone_Categories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BstoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BstoneServer).Categories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Bstone/Categories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BstoneServer).Categories(ctx, req.(*BstoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bstone_Abbreviations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BstoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BstoneServer).Abbreviations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Bstone/Abbreviations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BstoneServer).Abbreviations(ctx, req.(*BstoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bstone_CompoundReferences_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BstoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BstoneServer).CompoundReferences(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Bstone/CompoundReferences",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BstoneServer).CompoundReferences(ctx, req.(*BstoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bstone_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Bstone",
	HandlerType: (*BstoneServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Entities",
			Handler:    _Bstone_Entities_Handler,
		},
		{
			MethodName: "Categories",
			Handler:    _Bstone_Categories_Handler,
		},
		{
			MethodName: "Abbreviations",
			Handler:    _Bstone_Abbreviations_Handler,
		},
		{
			MethodName: "CompoundReferences",
			Handler:    _Bstone_CompoundReferences_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bstone.proto",
}
